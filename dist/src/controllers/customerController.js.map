{"version":3,"file":"customerController.js","sourceRoot":"","sources":["../../../src/controllers/customerController.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response, Router} from \"express\";\r\nimport Helpers = require(\"../helperFunctions\");\r\nimport { CustomerModel } from \"../models/customerModel\";\r\nimport { BaseRoute } from \"../routes/router\";\r\n\r\nlet userJson: any;\r\nlet userShoes: any;\r\nlet netGain: number = 0;\r\nlet sunkCost: number = 0;\r\nlet totalRevenue: number = 0;\r\nlet numShoes: number = 0;\r\n\r\nexport class CustomerController extends BaseRoute {\r\n\r\n    /**\r\n     * Creates customer routes.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method create\r\n     * @param router {Router} The router object.\r\n     * @return void\r\n     */\r\n    public static create(router: Router) {\r\n        // sorting all the shoes the user (id) owns from low to high\r\n        router.get(\"/user/:id/shoes/sort/current_price_low\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().sortCurrentPriceLow(req, res, next);\r\n        });\r\n        // sorting the shoes the user (id) owns from high to low\r\n        router.get(\"/user/:id/shoes/sort/current_price_high\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().sortCurrentPriceHigh(req, res, next);\r\n        });\r\n        router.get(\"/user/:id/shoes/sort/purchase_price_low\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().sortPurchasePriceLow(req, res, next);\r\n        });\r\n        // sorting the shoes the user (id) owns from high to low\r\n        router.get(\"/user/:id/shoes/sort/purchase_price_high\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().sortPurchasePriceHigh(req, res, next);\r\n        });\r\n        router.get(\"/user/:id/settings\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().settings(req, res, next);\r\n        });\r\n        // adds a shoe (id2) to a users (id) portfolio\r\n        router.post(\"/user/:id/add_shoe/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().addShoe(req, res, next);\r\n        });\r\n        // removes a shoe (id2) from a users (id) portfolio\r\n        router.post(\"/user/:id/remove_shoe/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().removeShoe(req, res, next);\r\n        });\r\n        // users home page showing all the shoes the user (id) owns\r\n        router.get(\"/user/:id/shoes\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().getAll(req, res, next);\r\n        });\r\n        // showing a specific shoe (id2) that the user (id) owns\r\n        router.get(\"/user/:id/shoes/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().getOne(req, res, next);\r\n        });\r\n\r\n        router.post(\"/user/:id/edit_shoe/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().editShoe(req, res, next);\r\n        });\r\n\r\n        router.post(\"/user/:id/edit_username\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().editUsername(req, res, next);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the settings view for a specific user when they navigate to /user/<user_id>/settings.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method settings\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async settings(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.check_local(queryint)) {\r\n            this.render(req, res, \"settings\",\r\n                {id: queryint,\r\n                    title: \"Settings\", username: userJson.username});\r\n        } else {\r\n            res.status(404);\r\n            res.send(\"invalid user\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles the POST request sent from the settings view to edit a user's username.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method editUsername\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async editUsername(req: Request, res: Response, next: NextFunction) {\r\n        const uString = \"id\";\r\n        const userID = parseInt(req.params[uString], 10);\r\n        const uIF = new CustomerModel();\r\n        if (!req.body.uname && this.check_local(userID)) {\r\n            req.body.uname = userJson.username;\r\n        }\r\n        await uIF.edit_userName(userID, req.body.uname);\r\n        res.redirect(\"/user/\" + userID + \"/shoes\");\r\n    }\r\n\r\n    /**\r\n     * Renders the allShoes view for a specific user with shoes sorted by the lowest to highest current price.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method sortCurrentPriceLow\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async sortCurrentPriceLow(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.check_local(queryint)) {\r\n            const sortedShoes: any = userShoes;\r\n            sortedShoes.sort((a: any, b: any) => a.current_price - b.current_price);\r\n            this.render(req, res, \"allShoes\",\r\n                {data: sortedShoes, id: queryint, net: netGain, num: numShoes, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            res.status(404);\r\n            res.send(\"invalid user\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the allShoes view for a specific user with shoes sorted by the highest to the lowest current price.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method sortCurrentPriceHigh\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async sortCurrentPriceHigh(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.check_local(queryint)) {\r\n            const sortedShoes: any = userShoes;\r\n            sortedShoes.sort((a: any, b: any) => b.current_price - a.current_price);\r\n            this.render(req, res, \"allShoes\",\r\n                {data: sortedShoes, id: queryint, net: netGain, num: numShoes, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            res.status(404);\r\n            res.send(\"invalid user\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the allShoes view for a specific user with shoes sorted by the lowest to highest purchase price.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method sortPurchasePriceLow\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async sortPurchasePriceLow(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.check_local(queryint)) {\r\n            const sortedShoes: any = userShoes;\r\n            sortedShoes.sort((a: any, b: any) => a.purchase_price - b.purchase_price);\r\n            this.render(req, res, \"allShoes\",\r\n                {data: sortedShoes, id: queryint, net: netGain, num: numShoes, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            res.status(404);\r\n            res.send(\"invalid user\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the allShoes view for a specific user with shoes sorted by the highest to the lowest purchase price.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method sortPurchasePriceHigh\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async sortPurchasePriceHigh(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.check_local(queryint)) {\r\n            const sortedShoes: any = userShoes;\r\n            sortedShoes.sort((a: any, b: any) => b.purchase_price - a.purchase_price);\r\n            this.render(req, res, \"allShoes\",\r\n                {data: sortedShoes, id: queryint, net: netGain, num: numShoes, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            res.status(404);\r\n            res.send(\"invalid user\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles the POST request sent by the addShoe view to add a shoe to a specific user's portfolio.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method addShoe\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async addShoe(req: Request, res: Response, next: NextFunction) {\r\n        const userIdString = \"id\";\r\n        const userId = parseInt(req.params[userIdString], 10);\r\n        const shoeIdString = \"id2\";\r\n        const shoeId = parseInt(req.params[shoeIdString], 10);\r\n        if (await this.check_local(userId)) {\r\n            const uif = new CustomerModel();\r\n            let price = parseInt(req.body.purchase_price, 10);\r\n            if (!price) {\r\n                price = 0;\r\n            }\r\n            await uif.add_shoe(userId, shoeId, price);\r\n            res.redirect(\"/user/\" + userId + \"/shoes/\");\r\n        } else {\r\n            Helpers.ID404(res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the POST request sent by the oneShoe view to edit a shoe in a specific user's portfolio.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method editShoe\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async editShoe(req: Request, res: Response, next: NextFunction) {\r\n        const uString = \"id\";\r\n        const idString = \"id2\";\r\n        const userID = parseInt(req.params[uString], 10);\r\n        const shoeID = req.params[idString];\r\n        const uIF = new CustomerModel();\r\n        if (!req.body.threshold) {\r\n            req.body.threshold = 0;\r\n        }\r\n        await uIF.edit_shoe(shoeID, parseInt(req.body.purchase_price, 10));\r\n        res.redirect(\"/user/\" + userID + \"/shoes\");\r\n    }\r\n\r\n    /**\r\n     * Handles the POST request sent by the allShoes view to remove a shoe in a specific user's portfolio.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method removeShoe\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async removeShoe(req: Request, res: Response, next: NextFunction) {\r\n        const userIdString = \"id\";\r\n        const userId = parseInt(req.params[userIdString], 10);\r\n        if (!(await this.check_local(userId))) {\r\n            Helpers.ID404(res);\r\n        } else {\r\n            const idString = \"id2\";\r\n            const docID = req.params[idString];\r\n            const uif = new CustomerModel();\r\n            await uif.remove_shoe(docID);\r\n            res.redirect(\"/user/\" + userId + \"/shoes/\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the allShoes view (with shoes sorted alphabetically ascending)\r\n     * when a user navigates to /user/<user_id>/shoes.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method getAll\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async getAll(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.setLocal(queryint)) {\r\n            userShoes.sort((a: any, b: any) => {\r\n                return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\r\n            });\r\n            this.render(req, res, \"allShoes\",\r\n                {data: userShoes, id: queryint, net: netGain, num: numShoes, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            Helpers.ID404(res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders the oneShoe view when a user navigates to /user/<user_id>/shoes/<shoe_id>.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method getAll\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param next {NextFunction} The NextFunction.\r\n     * @return void\r\n     */\r\n    public async getOne(req: Request, res: Response, next: NextFunction) {\r\n        const userIdString = \"id\";\r\n        const userId = parseInt(req.params[userIdString], 10);\r\n        const shoeIdString = \"id2\";\r\n        const shoeId = req.params[shoeIdString];\r\n        if (await this.check_local(userId)) {\r\n            const shoe = Helpers.findUserShoe(shoeId, userShoes);\r\n            if (shoe) {\r\n                const diff = shoe.current_price - shoe.purchase_price;\r\n                this.render(req, res, \"oneShoe\", {id: userId, diff, purchase: shoe.purchase_price, shoe});\r\n            } else {\r\n                Helpers.shoe404(res);\r\n            }\r\n        } else {\r\n            Helpers.ID404(res);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Checks if local variables are set for sorting functions, and whether or not the local\r\n     * variables are correct for the current user.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method check_local\r\n     * @param userID {Number} The id of the current user.\r\n     * @return true\r\n     */\r\n    private async check_local(userID: number) {\r\n        if (!(userJson && userShoes)) {\r\n            return await this.setLocal(userID);\r\n        } else if (userJson.user_id !== userID) {\r\n            return await this.setLocal(userID);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Sets local variables for a specific user.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method setLocal\r\n     * @param userID {Any} The id of the user.\r\n     * @return true if the local variables were set, false if\r\n     * the user does not exist and the local variables could not be set.\r\n     */\r\n    private async setLocal(userID: any) {\r\n        userShoes = [];\r\n        netGain = 0;\r\n        sunkCost = 0;\r\n        totalRevenue = 0;\r\n        numShoes = 0;\r\n        userJson = await Helpers.getUserInfo(userID);\r\n        if (!userJson) {\r\n            return false;\r\n        }\r\n        userShoes = await Helpers.getUserShoes(userID);\r\n        await this.setNet(userShoes);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Sets local variables for net gain/loss, etc. for a users shoe list.\r\n     *\r\n     * @class CustomerController extends BaseRoute\r\n     * @method setNet\r\n     * @param userShoes {Any} A list of user shoe JSON objects.\r\n     * @return true\r\n     */\r\n    private setNet(userShoes: any) {\r\n        [netGain, sunkCost, totalRevenue, numShoes] = Helpers.setNet(userShoes);\r\n    }\r\n\r\n}\r\n"]}
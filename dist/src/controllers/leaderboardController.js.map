{"version":3,"file":"leaderboardController.js","sourceRoot":"","sources":["../../../src/controllers/leaderboardController.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response, Router} from \"express\";\nimport Helpers = require(\"../helperFunctions\");\nimport { BaseRoute } from \"../routes/router\";\n\nlet leaderboard: any[] = [];\nlet Shoes: any;\nlet users: any;\nlet allUserShoes: any;\nlet id: any;\n\nexport class LeaderboardController extends BaseRoute {\n\n    /**\n     * Creates LeaderboardController routes.\n     *\n     * @class LeaderboardController extends BaseRoute\n     * @method create\n     * @param router {Router} The router object.\n     * @return void\n     */\n\n    public static create(router: Router) {\n        router.get(\"/user/:id/leaderboard\", (req: Request, res: Response, next: NextFunction) => {\n            new LeaderboardController().leaderboard(req, res, next);\n        });\n\n        router.get(\"/user/:id/leaderboard/avgNetHigh\", (req: Request, res: Response, next: NextFunction) => {\n            new LeaderboardController().avgNetHigh(req, res, next);\n        });\n\n        router.get(\"/user/:id/leaderboard/avgNetLow\", (req: Request, res: Response, next: NextFunction) => {\n            new LeaderboardController().avgNetLow(req, res, next);\n        });\n\n        router.get(\"/user/:id/leaderboard/netHigh\", (req: Request, res: Response, next: NextFunction) => {\n            new LeaderboardController().netHigh(req, res, next);\n        });\n\n        router.get(\"/user/:id/leaderboard/netLow\", (req: Request, res: Response, next: NextFunction) => {\n            new LeaderboardController().netLow(req, res, next);\n        });\n\n    }\n\n    /**\n     * Renders the leaderboard view when user navigates to /user/<user_id>/leaderboard.\n     *\n     * @class leaderboard extends BaseRoute\n     * @method leaderboard\n     * @param req {Request} The request object.\n     * @param res {Response} The response object.\n     * @param next {NextFunction} The NextFunction.\n     * @return void\n     */\n\n    public async leaderboard(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const userId = parseInt(req.params[idString], 10);\n        if (await this.createBoard(userId)) {\n            this.render(req, res, \"leaderboard\", {id: userId, title: \"Leaderboard\", leaderboard});\n        } else {\n            res.status(404)\n            .send({\n                message: \"No user with associated ID. Check the entered number.\",\n                status: res.status,\n            });        }\n    }\n\n    /**\n     * Renders the leaderboard view in sorted order when user navigates to /user/<user_id>/leaderboard/avgNetHigh.\n     *\n     * @class leaderboard extends BaseRoute\n     * @method avgNetHigh\n     * @param req {Request} The request object.\n     * @param res {Response} The response object.\n     * @param next {NextFunction} The NextFunction.\n     * @return void\n     */\n\n    public async avgNetHigh(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const userId = parseInt(req.params[idString], 10);\n        if (await this.check_local(userId)) {\n                leaderboard.sort((a: any, b: any) => b.avg_net - a.avg_net);\n                this.render(req, res, \"leaderboard\", {id: userId, title: \"Leaderboard\", leaderboard});\n        } else {\n            res.status(404)\n                .send({\n                    message: \"No user with associated ID. Check the entered number.\",\n                    status: res.status,\n                });        }\n    }\n\n    /**\n     * Renders the leaderboard view in sorted order when user navigates to /user/<user_id>/leaderboard/avgNetLow.\n     *\n     * @class leaderboard extends BaseRoute\n     * @method avgNetLow\n     * @param req {Request} The request object.\n     * @param res {Response} The response object.\n     * @param next {NextFunction} The NextFunction.\n     * @return void\n     */\n\n    public async avgNetLow(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const userId = parseInt(req.params[idString], 10);\n        if (await this.check_local(userId)) {\n            leaderboard.sort((a: any, b: any) => a.avg_net - b.avg_net);\n            this.render(req, res, \"leaderboard\", {id: userId, title: \"Leaderboard\", leaderboard});\n        } else {\n            res.status(404)\n                .send({\n                    message: \"No user with associated ID. Check the entered number.\",\n                    status: res.status,\n                });        }\n    }\n\n    /**\n     * Renders the leaderboard view in sorted order when user navigates to /user/<user_id>/leaderboard/netLow.\n     *\n     * @class leaderboard extends BaseRoute\n     * @method netLow\n     * @param req {Request} The request object.\n     * @param res {Response} The response object.\n     * @param next {NextFunction} The NextFunction.\n     * @return void\n     */\n\n    public async netLow(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const userId = parseInt(req.params[idString], 10);\n        if (await this.check_local(userId)) {\n            leaderboard.sort((a: any, b: any) => a.net - b.net);\n            this.render(req, res, \"leaderboard\", {id: userId, title: \"Leaderboard\", leaderboard});\n        } else {\n            res.status(404)\n                .send({\n                    message: \"No user with associated ID. Check the entered number.\",\n                    status: res.status,\n                });        }\n    }\n\n    /**\n     * Renders the leaderboard view in sorted order when user navigates to /user/<user_id>/leaderboard/netHigh.\n     *\n     * @class leaderboard extends BaseRoute\n     * @method netHigh\n     * @param req {Request} The request object.\n     * @param res {Response} The response object.\n     * @param next {NextFunction} The NextFunction.\n     * @return void\n     */\n\n    public async netHigh(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const userId = parseInt(req.params[idString], 10);\n        if (await this.check_local(userId)) {\n            leaderboard.sort((a: any, b: any) => b.net - a.net);\n            this.render(req, res, \"leaderboard\", {id: userId, title: \"Leaderboard\", leaderboard});\n        } else {\n            res.status(404)\n                .send({\n                    message: \"No user with associated ID. Check the entered number.\",\n                    status: res.status,\n                });        }\n    }\n\n    /**\n     * Checks if the leaderboard array has already been set otherwise it will call createBoard to query the db\n     * @class LeaderboardController extends BaseRoute\n     * @method check_local\n     * @param userID The ID number of the user currently viewing the leaderboard.\n     * @return void\n     */\n\n    private async check_local(userID: any) {\n        if (leaderboard.length === 0) {\n            return await this.createBoard(userID);\n        } else if (userID !== id) {\n            return await this.createBoard(userID);\n        }\n        return true;\n    }\n\n    /**\n     *  query the db to get the ranking data\n     * @class LeaderboardController extends BaseRoute\n     * @method createBoard\n     * @param userID The ID number of the user currently viewing the leaderboard.\n     * @return void\n     */\n    private async createBoard(userID: any) {\n        leaderboard = [];\n        if (await Helpers.isUser(userID)) {\n            id = userID;\n            await this.setLocals();\n            for (const item in users) {\n                if (users.hasOwnProperty(item)) {\n                    const ranking = users[item];\n                    const userShoes: any = this.getUserShoes(users[item].user_id);\n                    this.buildRanking(userShoes, ranking);\n                }\n            }\n            leaderboard.sort((a: any, b: any) => b.net - a.net);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     *  sets the data for a users ranking (net, sunk,revenue,avg_net,num) for leaderboard\n     * @class LeaderboardController extends BaseRoute\n     * @method buildRanking\n     * @param userShoes an array of the users shoe objects.\n     * @param An object that holds the properties important for ranking (net, sunk,revenue,avg_net,num) .\n     * @return void\n     */\n\n    private buildRanking(userShoes: any, ranking: any) {\n        let net: number;\n        let sunk: number;\n        let revenue: number;\n        [net, sunk, revenue] = Helpers.setNet(userShoes);\n        let avgNet: number;\n        if (userShoes.length === 0) {\n            avgNet = 0;\n        } else {\n            avgNet = net / userShoes.length;\n        }\n        ranking[\"net\"] = net;\n        ranking[\"sunk\"] = sunk;\n        ranking[\"revenue\"] = revenue;\n        ranking[\"avg_net\"] = avgNet;\n        ranking[\"num\"] = userShoes.length;\n        leaderboard.push(ranking);\n    }\n\n    /**\n     *  sets the data for users,shoes and allUserShoes variables by querying helpers class\n     * @class LeaderboardController extends BaseRoute\n     * @method setLocals\n     * @return void\n     */\n    private async setLocals() {\n        users = await Helpers.getUsers();\n        Shoes = await Helpers.getAllDbShoes();\n        allUserShoes = await Helpers.getAllUserShoes();\n    }\n\n    /**\n     * @class LeaderboardController extends BaseRoute\n     * @method getShoe\n     * @return shoe object\n     */\n\n    private getShoe(shoeID: number) {\n        for (const item in Shoes) {\n            if (Shoes.hasOwnProperty(item)) {\n                const shoe = Shoes[item];\n                if (shoe.shoe_id === shoeID) {\n                    return shoe;\n                }\n            }\n        }\n    }\n\n    /**\n     * gets all the shoes for a user\n     * @class LeaderboardController extends BaseRoute\n     * @method getUserShoes\n     * @return array of shoe objects\n     */\n\n    private getUserShoes(userID: any) {\n        const userShoes: any[] = [];\n        for (const item in allUserShoes) {\n            if (allUserShoes.hasOwnProperty(item)) {\n                if (allUserShoes[item].user_id === userID) {\n                    const shoe = allUserShoes[item];\n                    const shoeInfo = this.getShoe(allUserShoes[item].shoe_id);\n                    shoe[\"current_price\"] = shoeInfo.current_price;\n                    userShoes.push(shoe);\n                }\n            }\n        }\n        return userShoes;\n    }\n\n}\n"]}
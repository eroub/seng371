{"version":3,"file":"router.js","sourceRoot":"","sources":["../../../src/routes/router.ts"],"names":[],"mappings":";;;AAEA;;;;GAIG;AACH;IAMI;;;;;OAKG;IACH;QACI,uBAAuB;QACvB,IAAI,CAAC,KAAK,GAAG,2BAA2B,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IAED;;;;;;;OAOG;IACI,6BAAS,GAAhB,UAAiB,GAAW;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;;;;OAUG;IACI,0BAAM,GAAb,UAAc,GAAY,EAAE,GAAa,EAAE,IAAY,EAAE,OAAgB;QACrE,gBAAgB;QAChB,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;QAE1B,cAAc;QACd,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAElC,YAAY;QACZ,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAE9B,cAAc;QACd,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9B,CAAC;IACL,gBAAC;AAAD,CAAC,AAvDD,IAuDC;AAvDY,8BAAS","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\n\r\n/**\r\n * Constructor\r\n *\r\n * @class BaseRoute\r\n */\r\nexport class BaseRoute {\r\n\r\n    protected title: string;\r\n\r\n    private scripts: string[];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @class BaseRoute\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        // initialize variables\r\n        this.title = \"My New TypeScript Web app\";\r\n        this.scripts = [];\r\n    }\r\n\r\n    /**\r\n     * Add a JS external file to the request.\r\n     *\r\n     * @class BaseRoute\r\n     * @method addScript\r\n     * @param src {string} The src to the external JS file.\r\n     * @return {BaseRoute} Self for chaining\r\n     */\r\n    public addScript(src: string): BaseRoute {\r\n        this.scripts.push(src);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Render a page.\r\n     *\r\n     * @class BaseRoute\r\n     * @method render\r\n     * @param req {Request} The request object.\r\n     * @param res {Response} The response object.\r\n     * @param view {String} The view to render.\r\n     * @param options {Object} Additional options to append to the view's local scope.\r\n     * @return void\r\n     */\r\n    public render(req: Request, res: Response, view: string, options?: object) {\r\n        // add constants\r\n        res.locals.BASE_URL = \"/\";\r\n\r\n        // add scripts\r\n        res.locals.scripts = this.scripts;\r\n\r\n        // add title\r\n        res.locals.title = this.title;\r\n\r\n        // render view\r\n        res.render(view, options);\r\n    }\r\n}\r\n"]}